/*
package HomeWork_0416;
 * Banking System

/*
 * 계좌 클래스
 * ArrayList 이용
 */

import java.util.*;

// 신용등급
interface CreditRating{
	public static final int LEVEL_A=3;  //우대이율 3%
	int LEVEL_B=2;
	int LEVEL_C=1;
}

/* 
 * 클래스 이름: Account
 * 클래스 유형: Entity 클래스
 */
class Account{
	protected String accID; 
	protected int balance;    
	protected String cusName; 

	Account(String accID, int balance, String cusName){
		this.accID=accID;
		this.balance=balance;
		this.cusName=cusName;
	}

	public String getAccID(){
		return accID;
	}

	public void deposit(int money){
		balance+=money;
	}

	public int withdraw(int money){
		if(balance<money)
			return 0;
			
		balance-=money;
		return money;
	}

	public void showAccInfo()
	{
		System.out.println("계좌ID: "+accID);
		System.out.println("이  름: "+cusName);
		System.out.println("잔  액: "+balance);
	}
}//class


/* 
 * 클래스 이름: NormalAccount
 * 클래스 유형: Entity 클래스
 */

class NormalAccount extends Account{
	protected int interRate;   // 이자율 %단위

	NormalAccount(String accID, int balance, String cusName, int interRate)	{
		super(accID, balance, cusName);
		this.interRate = interRate;
	}

	public void deposit(int money)	{
		int myMoney =money+(int)(money*(interRate/100.0));    // 원금, 이자추가
		super.deposit(myMoney);   
	}

	public void showAccInfo()	{
		super.showAccInfo();
		System.out.println("이자율 : "+interRate +"%");
	}
}//class


/* 
 * 클래스 이름: HighCreditAccount
 * 클래스 유형: Entity 클래스
 */

class HighCreditAccount extends NormalAccount{
	private int specialRate;

	HighCreditAccount(String accID, int balance, String cusName, int interRate, int specialRate)	{	
		super(accID, balance, cusName, interRate);
		this.specialRate = specialRate;	
	}
	
	public void deposit(int money)	{
		super.deposit(money);        // 원금과 이자추가 
		balance+=(int)(money*(specialRate/100.0));   // 특별이자추가
	}

	public void showAccInfo()	{
		super.showAccInfo();
		System.out.println("특별이자율 : "+specialRate +"%");
	}

}//class


/* 
 * 클래스 이름: AccountManager
 * 클래스 유형: 컨트롤(Control) 클래스
 */

class AccountManager{
	private Scanner sc = new Scanner(System.in);

	private ArrayList<Account> accList = new ArrayList<Account>(105);

	public void showMenu()	{
		System.out.println("-----Menu------");
		System.out.println("1. 계좌개설");
		System.out.println("2. 입    금");
		System.out.println("3. 출    금");
		System.out.println("4. 계좌정보 전체 출력");
		System.out.println("5. 프로그램 종료");
	}

	public void makeAccount(){
		System.out.println("[계좌종류선택]");
		System.out.println("1.보통예금계좌 ");
		System.out.println("2.신용신뢰계좌 ");
		System.out.print("선택: ");
		int sel=sc.nextInt();
		
		Account acc=null;
		if(sel==1)  //1.보통예금계좌
			acc= makeNormalAccount();
		else if(sel==2) //2.신용신뢰계좌
			acc=makeCreditAccount();
		else{
			System.out.print("잘못 선택하였습니다!\n\n");
			return;
		}

		accList.add(acc);
	}

	public Account makeNormalAccount()	{
		System.out.println("\n[보통예금계좌 개설]");
		System.out.print("계좌ID: ");	
		sc.nextLine();
		String id=sc.nextLine();
		System.out.print("이  름: ");			
		String name=sc.nextLine();
		System.out.print("입금액: ");	
		int balance=sc.nextInt();
		System.out.print("이자율: ");	
		int interRate=sc.nextInt();
		System.out.println();

		return new NormalAccount(id, balance, name, interRate);
	}

	public Account makeCreditAccount()	{
		System.out.println("\n[신용신뢰계좌 개설]");
		System.out.print("계좌ID: ");	
		sc.nextLine();
		String id=sc.nextLine();
		System.out.print("이  름: ");			
		String name=sc.nextLine();
		System.out.print("입금액: ");	
		int balance=sc.nextInt();
		System.out.print("이자율: ");	
		int interRate=sc.nextInt();
		System.out.println();

		System.out.print("신용등급(1toA, 2toB, 3toC): ");	
		int creditLevel=sc.nextInt();
		System.out.println();
		
		int creditRate=0;
		switch(creditLevel)	{
			case 1:
				creditRate = CreditRating.LEVEL_A;
				break;
			case 2:
				creditRate = CreditRating.LEVEL_B;
				break;
			case 3:
				creditRate = CreditRating.LEVEL_C;
		}
		return new HighCreditAccount(id, balance, name, interRate, creditRate);

	}

	private int searchAccount(String accId)	{
		for(int idx=0; idx<accList.size(); idx++){
			Account acc = accList.get(idx);
			if(acc.getAccID().equals(accId))	{				
				return idx;
			}
		}
		return -1;
	}

	public void depositMoney()	{
		System.out.println("[입    금]");
		System.out.print("계좌ID: ");
		sc.nextLine();
		String id=sc.nextLine();
		System.out.print("입금액: ");
		int money=sc.nextInt();
		
		int idx = searchAccount(id);
		if(idx!=-1){
			Account acc = accList.get(idx);
			acc.deposit(money);
			System.out.println("입금완료\n");			
		}else{
			System.out.println("유효하지 않은 ID 입니다.\n");	
		}	
	}

	public void withdrawMoney()	{
		System.out.println("[출    금]");
		System.out.print("계좌ID: ");
		sc.nextLine();
		String id=sc.nextLine();
		System.out.print("출금액: ");
		int money=sc.nextInt();
		
		int idx = searchAccount(id);
		if(idx!=-1){
			Account acc = accList.get(idx);
			if(acc.withdraw(money)==0){
				System.out.println("잔액부족\n");
				return;
			}

			System.out.println("출금완료\n");
			return;
		}else{
			System.out.println("유효하지 않은 계좌번호 입니다.\n");	
		}	
	}


	public void showAllAccInfo()	{
		if(accList.isEmpty()){
			System.out.println("계좌 정보가 존재하지 않습니다!!\n");
			return;
		}

		System.out.println("\n==========전체 고객 계좌 정보===========");
		for(int i=0; i<accList.size(); i++)	{
			accList.get(i).showAccInfo();
			System.out.println();
		}
		System.out.println("========================================\n");
	}
}//class

class BankingSystemVer03{
	public static void main(String[] args)	{
		Scanner sc = new Scanner(System.in);
		AccountManager manager=new AccountManager();
		
		while(true){
			manager.showMenu();
			System.out.print("선택: "); 
			int choice=sc.nextInt();
			System.out.println();
			
			switch(choice){
				case 1:
					manager.makeAccount(); 
					break;
				case 2:
					manager.depositMoney(); 
					break;
				case 3: 
					manager.withdrawMoney(); 
					break;
				case 4:
					manager.showAllAccInfo(); 
					break;
				case 5:
					System.out.println("프로그램을 종료합니다");
					return;
				default:
					System.out.println("잘못 선택하셨습니다\n");
			}
		}
	}

}//class
*/